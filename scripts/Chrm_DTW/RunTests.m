%% STP's test script for the LABROSA Beat-synched-chroma - DTW cover song detection package%   run with octave RunTests.mpkg load signal; take1 = false;            % take 1 minute from the middle of the songpre_proc = false;         % do the pre-processing power/norm/FFT before the save                          % Data file namescg_dir = 'ChrmGrms0/';list_file = 'list_stp.txt';snd_folder = '/Content/Code/SndsLike/CoSoDe/covers80_32k/aiff';disp(['-------- Starting analysis at ', datestr(rem(now,1),'HH:MM:SS --------')]);% Calculate and store the beat-synchronous chroma features for the list of files% Compute (or list) the array of c-grams; returns list of chrm-grm file names %       calclistftrs(listfile, srcprepend, srcext, dstprepend, dstext, skip, fctr, fsd, ctype, take1, pre_proc)qlist = calclistftrs(list_file, snd_folder, '', cg_dir, '.chrm', 0, 400, 1.0, 1, take1, pre_proc);tlist = qlist;        % match all% ind = 1;            % select which to match% tlist = qlist(ind); % match one songnowd = datestr(rem(now, 1), 'HH:MM:SS - ');disp(['-------- Starting matching at ', nowd, num2str(length(tlist)), ' candidate(s) --------']);% Calculate the matrix of cover song similarities%              coverTestLists(qlist,tlist,pwr,metric,verb)[R, S, T, C] = coverTestLists(qlist, tlist, 0.5, 2, 1, take1, pre_proc);   % verboseR2 = abs(R);               % abs valR3 = R2 .* R2 * 100000;    % square and scale result      % print the results##disp(['S:', S]);##disp(['T:', T]);##disp(['C:', C]);if length(tlist) == 1     % verbose for single-song match  R4 = R3;  ssu = sum(R4);  ssu -= R4(ind);  ssu /= length(R3);  stat = R3(ind) / ssu;  disp(['Done - ratio = ', num2str(stat)]);end                % save matches to a CSV filecsvnam = ['Results_', datestr(now, 'yy_mm_dd_HH_MM'), '.csv'];dlmwrite(csvnam, R3, '\t', "precision", 3)disp(['Done - Saved to file ', csvnam]);% pre-tune% match time = 16:41:09 - 15:43:47% tuned% match time = 04:25:35 - 22:53:33